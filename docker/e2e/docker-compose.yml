services:
  ### API MOCKING ###
  mockserver:
    build:
      context: .
      dockerfile: mockserver/Dockerfile
      args:
        MOCKSERVER_VERSION: ${MOCKSERVER_VERSION}
    ports:
      - "1080:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/api_*.json
      MOCKSERVER_WATCH_INITIALIZATION_JSON: true
    healthcheck:
      test: ["CMD", "curl", "-sSf", "-X", "PUT", "http://localhost:1080/mockserver/status"]
      interval: 5s
      timeout: 10s
      retries: 30
    volumes:
      - type: bind
        source: ./mockserver_config
        target: /config
    stop_grace_period: 5m
    restart: unless-stopped
    networks:
      - internal
  ### END API MOCKING ###

  ### S3 ###
  localstack: # https://docs.localstack.cloud/overview/
    image: localstack/localstack:$LOCALSTACK_VERSION
    ports:
      - "4566:4566" # LocalStack Gateway
    #      Services like OpenSearch or Elasticsearch use external software which binds to separate ports,
    #      unless configured otherwise (e.g. using 'OPENSEARCH_ENDPOINT_STRATEGY=domain'):
    #      https://docs.localstack.cloud/references/external-ports/
    #      - "4510-4559:4510-4559"
    environment:
      - DEBUG=1 # Increases log level, prints more verbose logs
    #      - DOCKER_HOST=unix:///var/run/docker.sock # Only necessary for some services
    healthcheck:
      test: ["CMD", "curl", "-sSf", "-X", "GET", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 10s
      retries: 30
    volumes:
      - ./localstack/localstack-script.sh:/etc/localstack/init/ready.d/script.sh # Init script
      - localstack:/var/lib/localstack"
#      - "/var/run/docker.sock:/var/run/docker.sock" # Only necessary for some services
    restart: unless-stopped
    networks:
      - internal
  ### END S3 ###

networks:
  internal:

volumes:
  localstack: